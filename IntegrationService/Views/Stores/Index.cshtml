@model IntegrationService.Models.PagedResult<StoreViewModel>
@using IntegrationService.ViewModels.StoreViewModels;
@using NonFactors.Mvc.Grid;
@using System.Data;
@using PagedList.Core.Mvc
@using Newtonsoft.Json;
@using System.Globalization;
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Καταστήματα";
    ViewData["dashId"] = "50";
    ViewBag.BodyClass = "management-tables";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card-body">
    <div class="row">
        <div class="col-md-4">
            <h2 class="card-title">Καταστήματα</h2>
        </div>
    </div>

    @{
        var ddlFieldsList = new List<SelectListItem>();
        ddlFieldsList.Add(new SelectListItem { Text = "WarehouseID", Value = "{" + $"\"Id\" : \"{Guid.Empty.ToString()}\",\"Type\" : 10,\"Group\" : \"Entity\"" + "}" });
        ddlFieldsList.Add(new SelectListItem { Text = "Name", Value = "{" + $"\"Id\" : \"{Guid.Empty.ToString()}\",\"Type\" : 10,\"Group\" : \"FreeText\"" + "}" });
        ddlFieldsList.Add(new SelectListItem { Text = "Type", Value = "{" + $"\"Id\" : \"{Guid.Empty.ToString()}\",\"Type\" : 10,\"Group\" : \"FreeText\"" + "}" });
    }

    @{
        var ddlColumnList = new List<SelectListItem>();
        ddlColumnList.Add(new SelectListItem { Text = "WarehouseID", Value = "{" + $"\"Id\" : \"{Guid.Empty.ToString()}\",\"Type\" : 30,\"Group\" : \"Sort\"" + "}" });
        ddlColumnList.Add(new SelectListItem { Text = "Name", Value = "{" + $"\"Id\" : \"{Guid.Empty.ToString()}\",\"Type\" : 30,\"Group\" : \"Sort\"" + "}" });
        ddlColumnList.Add(new SelectListItem { Text = "Type", Value = "{" + $"\"Id\" : \"{Guid.Empty.ToString()}\",\"Type\" : 30,\"Group\" : \"Sort\"" + "}" });
    }

    @*add partial for the filters and sort fields*@
    @await Html.PartialAsync("~/Views/Shared/_FilterSortPartial.cshtml", new IntegrationService.ViewModels.PartialViewModel(),  new ViewDataDictionary(ViewData) {
    { "ddlFieldsList", ddlFieldsList },
    {"ddlColumnList", ddlColumnList}
    })
    <div class="table-responsive sticky-heads">
        <table cellspacing="0" id="gvMain" style="width:100%;border-collapse:collapse;">
            <tr class="GridViewScrollHeader">
                <th class="fixed">Action</th>
                <th class="non-fixed">Name</th>
                <th class="non-fixed">WarehouseID</th>
                <th class="table-rest-values non-fixed">Type</th>
            </tr>
            @foreach (var item in Model.Results)
            {
                <tr class="GridViewScrollItem">
                    <td class="fixed">
                        @* <a href='/Categories/Edit/{@item.Id}' class='action-edit' data-tooltip='Edit' data-placement='top'> <i class='icon-edit'></i><span class='visually-hidden'>Edit</span></a>
                    <a href='/Categories/Details/{@item.Id}' class='action-details' data-tooltip='Details' data-placement='top'> <i class='icon-edit'></i><span class='visually-hidden'>Edit</span></a>
                    *@
                    <ul class='action-btn-list'>
                        <li>
                            <a href='Stores/Edit/{@item.Id}' class='action-edit' data-tooltip='Edit' data-placement='right'>
                                <i class='icon-edit'></i>
                                <span class='visually-hidden'>Edit</span>
                            </a>
                            </li>
                               @*<li><a href='Stores/Details/{@item.Id}' class='action-details' data-tooltip='Details' data-placement='top'><i class='icon-details'></i><span class='visually-hidden'>Details</span></a>
                                </li>*@
                                </ul>
                    </td>
                    <td>@item.Name</td>
                    <td>@item.WarehouseID</td>
                    <td class="table-rest-values">@item.Type</td>
                </tr>
            }
        </table>
    </div>

    @if (Model.EndPage > 1)
    {
        @*<nav aria-label="Page navigation example">*@
        <ul class="pagination">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" @*onclick="retrieve(1)" id="pageLink" *@
                       href="@Url.Action("Index", new { page = 1 , sortOrder = @ViewData["SkuSortParm"], searchString = @ViewData["CurrentFilter"]})">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" @* onclick="retrieve(@Model.CurrentPage -1)" id="pageLink" *@
                       href="@Url.Action("Index", new { page = Model.CurrentPage - 1 , sortOrder = @ViewData["SkuSortParm"], searchString = @ViewData["CurrentFilter"]})">Previous</a>
                </li>
            }

            @for (var page1 = Model.StartPage; page1 <= Model.EndPage; page1++)
            {
                <li class="@(page1 == Model.CurrentPage ? "page-item active" : "page-item")">
                    <a class="page-link" @*onclick="retrieve(@page1)" id="pageLink"*@
                       href="@Url.Action("Index", new { page = page1, sortOrder = @ViewData["SkuSortParm"], searchString = @ViewData["CurrentFilter"]})">@page1</a>
                </li>
            }

            @if (Model.CurrentPage < Model.PageCount)
            {
                <li class="page-item">
                    <a class="page-link" @*onclick="retrieve(@Model.CurrentPage + 1)" id="pageLink" *@
                       href="@Url.Action("Index", new { page = Model.CurrentPage + 1 , sortOrder = @ViewData["SkuSortParm"], searchString = @ViewData["CurrentFilter"]})">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" @*onclick="retrieve(@Model.PageCount)" id="pageLink" *@
                       href="@Url.Action("Index", new { page = Model.PageCount, sortOrder = @ViewData["SkuSortParm"], searchString = @ViewData["CurrentFilter"]})">Last</a>
                </li>
            }
        </ul>


    }
</div>


@section Scripts {
    @await Html.PartialAsync("~/Views/Shared/_FilterShortScriptsPartial.cshtml")
                        }



